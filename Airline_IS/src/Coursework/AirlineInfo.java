/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Coursework;


import java.awt.Desktop;
import java.awt.Point;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class AirlineInfo extends javax.swing.JFrame {

    /**
     * Creates new form AirlineIS
     */
    public AirlineInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        jLayeredPane = new javax.swing.JLayeredPane();
        jSearchPanel = new javax.swing.JPanel();
        fromTF = new javax.swing.JTextField();
        priceTF = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        adminModeBtn = new javax.swing.JButton();
        bookBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        airlineChoiceCB = new javax.swing.JComboBox<>();
        toTF = new javax.swing.JTextField();
        jBookPanel = new javax.swing.JPanel();
        firstNameTF = new javax.swing.JTextField();
        lastNameTF = new javax.swing.JTextField();
        ageTF = new javax.swing.JTextField();
        maleRBtn = new javax.swing.JRadioButton();
        femaleRBtn = new javax.swing.JRadioButton();
        otherRBtn = new javax.swing.JRadioButton();
        personalDetailsLbl = new javax.swing.JLabel();
        displayTimeTF = new javax.swing.JTextField();
        displayFlightTF = new javax.swing.JTextField();
        displayDestinationTF = new javax.swing.JTextField();
        displayPriceTF = new javax.swing.JTextField();
        flightClassCB = new javax.swing.JComboBox<>();
        flightDetailsLbl = new javax.swing.JLabel();
        returnBookBtn = new javax.swing.JButton();
        generateBillBtn = new javax.swing.JButton();
        displayAirlineTF = new javax.swing.JTextField();
        displayGateTF = new javax.swing.JTextField();
        jAdminPanel = new javax.swing.JPanel();
        addFlightTF = new javax.swing.JTextField();
        addPriceTF = new javax.swing.JTextField();
        addGateTF = new javax.swing.JTextField();
        addDestinationTF = new javax.swing.JTextField();
        addAirlineTF = new javax.swing.JTextField();
        adminSubmitBtn = new javax.swing.JButton();
        adminReturnBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        addStatusTF = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        addTimeTF = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        titleLbl = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        resetItem = new javax.swing.JMenuItem();
        resetTableItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        browsingHelpItem = new javax.swing.JMenuItem();
        bookingHelpItem = new javax.swing.JMenuItem();
        adminHelpItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(208, 230, 165));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        displayTable.setBackground(new java.awt.Color(194, 202, 208));
        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight", "Destination", "Time", "Status", "Gate", "Airline", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayTable.setShowGrid(true);
        displayTable.getTableHeader().setReorderingAllowed(false);
        displayTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                displayTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(displayTable);
        if (displayTable.getColumnModel().getColumnCount() > 0) {
            displayTable.getColumnModel().getColumn(0).setResizable(false);
            displayTable.getColumnModel().getColumn(1).setResizable(false);
            displayTable.getColumnModel().getColumn(2).setResizable(false);
            displayTable.getColumnModel().getColumn(3).setResizable(false);
            displayTable.getColumnModel().getColumn(4).setResizable(false);
            displayTable.getColumnModel().getColumn(5).setResizable(false);
            displayTable.getColumnModel().getColumn(6).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 44, 790, 133));

        jLayeredPane.setLayout(new java.awt.CardLayout());

        jSearchPanel.setBackground(new java.awt.Color(115, 149, 174));

        fromTF.setEditable(false);
        fromTF.setBackground(new java.awt.Color(173, 173, 173));
        fromTF.setText("Nepal");
        fromTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "From", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        priceTF.setBackground(new java.awt.Color(173, 173, 173));
        priceTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        priceTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceTFActionPerformed(evt);
            }
        });
        priceTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                priceTFKeyPressed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(0, 116, 120));
        searchBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        adminModeBtn.setBackground(new java.awt.Color(0, 116, 120));
        adminModeBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adminModeBtn.setText("Admin");
        adminModeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminModeBtnActionPerformed(evt);
            }
        });

        bookBtn.setBackground(new java.awt.Color(0, 116, 120));
        bookBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        bookBtn.setText("Book");
        bookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Destination");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Airline");

        airlineChoiceCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buddha Airline", "Qatar Airline", "Emirates Airline", "Himalay Airline", "Malindo Airline", "Etihad Airline", "Malaysian Airline", "Air Arabia" }));
        airlineChoiceCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airlineChoiceCBActionPerformed(evt);
            }
        });

        toTF.setBackground(new java.awt.Color(173, 173, 173));
        toTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "To", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        toTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                toTFKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jSearchPanelLayout = new javax.swing.GroupLayout(jSearchPanel);
        jSearchPanel.setLayout(jSearchPanelLayout);
        jSearchPanelLayout.setHorizontalGroup(
            jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jSearchPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fromTF, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jSearchPanelLayout.createSequentialGroup()
                        .addComponent(bookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(adminModeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jSearchPanelLayout.createSequentialGroup()
                        .addComponent(toTF, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                        .addComponent(airlineChoiceCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jSearchPanelLayout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(47, 47, 47))
        );
        jSearchPanelLayout.setVerticalGroup(
            jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toTF)
                    .addComponent(priceTF)
                    .addGroup(jSearchPanelLayout.createSequentialGroup()
                        .addComponent(airlineChoiceCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 31, Short.MAX_VALUE))
                    .addComponent(fromTF))
                .addGap(32, 32, 32)
                .addGroup(jSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminModeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(98, 98, 98))
        );

        jLayeredPane.add(jSearchPanel, "card2");

        jBookPanel.setBackground(new java.awt.Color(115, 149, 174));

        firstNameTF.setBackground(new java.awt.Color(173, 173, 173));
        firstNameTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "First Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        firstNameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstNameTFKeyPressed(evt);
            }
        });

        lastNameTF.setBackground(new java.awt.Color(173, 173, 173));
        lastNameTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Last Name", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        lastNameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lastNameTFKeyPressed(evt);
            }
        });

        ageTF.setBackground(new java.awt.Color(173, 173, 173));
        ageTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Age", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        ageTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ageTFKeyPressed(evt);
            }
        });

        genderButtonGroup.add(maleRBtn);
        maleRBtn.setText("Male");

        genderButtonGroup.add(femaleRBtn);
        femaleRBtn.setText("Female");

        genderButtonGroup.add(otherRBtn);
        otherRBtn.setText("Other");

        personalDetailsLbl.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        personalDetailsLbl.setText("Personal Details");

        displayTimeTF.setEditable(false);
        displayTimeTF.setBackground(new java.awt.Color(173, 173, 173));
        displayTimeTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        displayFlightTF.setEditable(false);
        displayFlightTF.setBackground(new java.awt.Color(173, 173, 173));
        displayFlightTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Flight", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        displayDestinationTF.setEditable(false);
        displayDestinationTF.setBackground(new java.awt.Color(173, 173, 173));
        displayDestinationTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Destination", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        displayPriceTF.setEditable(false);
        displayPriceTF.setBackground(new java.awt.Color(173, 173, 173));
        displayPriceTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        flightClassCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Economy Class", "Business Class", "First Class" }));

        flightDetailsLbl.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        flightDetailsLbl.setText("Flight Details");

        returnBookBtn.setBackground(new java.awt.Color(0, 116, 120));
        returnBookBtn.setText("Return");
        returnBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBookBtnActionPerformed(evt);
            }
        });

        generateBillBtn.setBackground(new java.awt.Color(0, 116, 120));
        generateBillBtn.setText("OK");
        generateBillBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateBillBtnActionPerformed(evt);
            }
        });

        displayAirlineTF.setEditable(false);
        displayAirlineTF.setBackground(new java.awt.Color(173, 173, 173));
        displayAirlineTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Airline", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        displayGateTF.setEditable(false);
        displayGateTF.setBackground(new java.awt.Color(173, 173, 173));
        displayGateTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gate", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        javax.swing.GroupLayout jBookPanelLayout = new javax.swing.GroupLayout(jBookPanel);
        jBookPanel.setLayout(jBookPanelLayout);
        jBookPanelLayout.setHorizontalGroup(
            jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBookPanelLayout.createSequentialGroup()
                .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jBookPanelLayout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(personalDetailsLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(flightDetailsLbl)
                        .addGap(153, 153, 153))
                    .addGroup(jBookPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jBookPanelLayout.createSequentialGroup()
                                .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(femaleRBtn)
                                    .addComponent(maleRBtn, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(otherRBtn, javax.swing.GroupLayout.Alignment.LEADING)))
                            .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBookPanelLayout.createSequentialGroup()
                                .addComponent(flightClassCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(displayFlightTF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(displayTimeTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayAirlineTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(displayPriceTF, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                .addComponent(displayDestinationTF))
                            .addComponent(displayGateTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(jBookPanelLayout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(generateBillBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(returnBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jBookPanelLayout.setVerticalGroup(
            jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBookPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personalDetailsLbl)
                    .addComponent(flightDetailsLbl))
                .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jBookPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayDestinationTF, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayFlightTF, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jBookPanelLayout.createSequentialGroup()
                                .addComponent(lastNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jBookPanelLayout.createSequentialGroup()
                                .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(displayTimeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(displayGateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(displayPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(displayAirlineTF, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jBookPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maleRBtn)
                            .addComponent(flightClassCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(femaleRBtn)
                        .addGap(18, 18, 18)
                        .addComponent(otherRBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generateBillBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        maleRBtn.setActionCommand("Male");
        femaleRBtn.setActionCommand("Female");
        otherRBtn.setActionCommand("Other");

        jLayeredPane.add(jBookPanel, "card3");

        jAdminPanel.setBackground(new java.awt.Color(115, 149, 174));

        addFlightTF.setBackground(new java.awt.Color(173, 173, 173));
        addFlightTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Flight", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        addFlightTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addFlightTFKeyPressed(evt);
            }
        });

        addPriceTF.setBackground(new java.awt.Color(173, 173, 173));
        addPriceTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Price", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        addPriceTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addPriceTFKeyPressed(evt);
            }
        });

        addGateTF.setBackground(new java.awt.Color(173, 173, 173));
        addGateTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gate", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        addGateTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addGateTFKeyPressed(evt);
            }
        });

        addDestinationTF.setBackground(new java.awt.Color(173, 173, 173));
        addDestinationTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Destination", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        addDestinationTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addDestinationTFKeyPressed(evt);
            }
        });

        addAirlineTF.setBackground(new java.awt.Color(173, 173, 173));
        addAirlineTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Airline", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        addAirlineTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addAirlineTFKeyPressed(evt);
            }
        });

        adminSubmitBtn.setBackground(new java.awt.Color(0, 116, 120));
        adminSubmitBtn.setText("Submit");
        adminSubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminSubmitBtnActionPerformed(evt);
            }
        });

        adminReturnBtn.setBackground(new java.awt.Color(0, 116, 120));
        adminReturnBtn.setText("Return");
        adminReturnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminReturnBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(0, 116, 120));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        addStatusTF.setBackground(new java.awt.Color(173, 173, 173));
        addStatusTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Status", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        addStatusTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addStatusTFKeyPressed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(0, 116, 120));
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        addTimeTF.setBackground(new java.awt.Color(173, 173, 173));
        addTimeTF.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Time", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        addTimeTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addTimeTFKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jAdminPanelLayout = new javax.swing.GroupLayout(jAdminPanel);
        jAdminPanel.setLayout(jAdminPanelLayout);
        jAdminPanelLayout.setHorizontalGroup(
            jAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAdminPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jAdminPanelLayout.createSequentialGroup()
                        .addComponent(addFlightTF, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addDestinationTF, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addTimeTF))
                    .addComponent(adminReturnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jAdminPanelLayout.createSequentialGroup()
                        .addComponent(addGateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addAirlineTF, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(jAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jAdminPanelLayout.createSequentialGroup()
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(adminSubmitBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addStatusTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                .addGap(0, 21, Short.MAX_VALUE))
        );
        jAdminPanelLayout.setVerticalGroup(
            jAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAdminPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTimeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addFlightTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addDestinationTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addStatusTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(jAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAdminPanelLayout.createSequentialGroup()
                        .addGroup(jAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addGateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addAirlineTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(adminReturnBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jAdminPanelLayout.createSequentialGroup()
                        .addComponent(adminSubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(75, Short.MAX_VALUE))))
        );

        jLayeredPane.add(jAdminPanel, "card4");

        getContentPane().add(jLayeredPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 800, 280));

        jPanel1.setBackground(new java.awt.Color(115, 149, 174));

        titleLbl.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        titleLbl.setText("Airline Information System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(287, Short.MAX_VALUE)
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(273, 273, 273))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 450, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 480));

        fileMenu.setText("File");

        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_DOWN_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");

        resetItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        resetItem.setText("Reset Program");
        resetItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetItemActionPerformed(evt);
            }
        });
        editMenu.add(resetItem);

        resetTableItem.setText("Reset Table");
        resetTableItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetTableItemActionPerformed(evt);
            }
        });
        editMenu.add(resetTableItem);

        jMenuBar1.add(editMenu);

        helpMenu.setText("Help");

        browsingHelpItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Coursework/search.png"))); // NOI18N
        browsingHelpItem.setText("Browsing Panel");
        browsingHelpItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsingHelpItemActionPerformed(evt);
            }
        });
        helpMenu.add(browsingHelpItem);

        bookingHelpItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Coursework/booking.png"))); // NOI18N
        bookingHelpItem.setText("Booking Panel");
        bookingHelpItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingHelpItemActionPerformed(evt);
            }
        });
        helpMenu.add(bookingHelpItem);

        adminHelpItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Coursework/admin.png"))); // NOI18N
        adminHelpItem.setText("Admin Panel");
        adminHelpItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminHelpItemActionPerformed(evt);
            }
        });
        helpMenu.add(adminHelpItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        if(isImported){
            // no empty TF is allowed
            if(addFlightTF.getText().isEmpty() || addDestinationTF.getText().isEmpty() || addPriceTF.getText().isEmpty() || addStatusTF.getText().isEmpty() || addGateTF.getText().isEmpty() || addAirlineTF.getText().isEmpty() || addPriceTF.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter data on all fields.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else{
                // cannot allow to update if no specific row is selected
                try{
                    int currentRow = displayTable.getSelectedRow();
                    String[] data = getData();
                    for(int i = 0; i < displayTable.getColumnCount(); i++){
                        displayTable.setValueAt(data[i], currentRow, i);
                    }
                    ImportAndExport.exportFile(displayTable);
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Updating values without selecting a row isn't allowed.", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed
    
    private void clearPersonalDetails(){
        // reset the personal details of user
        firstNameTF.setText("");
        lastNameTF.setText("");
        ageTF.setText("");
        genderButtonGroup.clearSelection();
        flightClassCB.setSelectedIndex(0);
    }
    
    private void clearBookingTextFields(){
        // clears the TextFields of booking panel
        displayFlightTF.setText("");
        displayDestinationTF.setText("");
        displayTimeTF.setText("");
        displayGateTF.setText("");
        displayAirlineTF.setText("");
        displayPriceTF.setText("");
    }
    
    private void clearAdminTextFields(){
        // clears the TextFields of admin panel
        addFlightTF.setText("");
        addDestinationTF.setText("");
        addTimeTF.setText("");
        addStatusTF.setText("");
        addGateTF.setText("");
        addAirlineTF.setText("");
        addPriceTF.setText("");
    }
    
    private void resetTable(){
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        while(model.getRowCount() > 0){
            model.removeRow(0);
        }
    }
    
    private void filter(){
        // filtering only the found rows of data
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        while(model.getRowCount() > flightCount){
            model.removeRow(flightCount);
        }
    }
    
    private void adminModeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminModeBtnActionPerformed
        // TODO add your handling code here:
        switchPanel(jAdminPanel);
        if (isImported){
            resetTable();
            ImportAndExport.importFile(displayTable);
        } 
    }//GEN-LAST:event_adminModeBtnActionPerformed

    private void adminReturnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminReturnBtnActionPerformed
        // TODO add your handling code here:
        switchPanel(jSearchPanel);
        clearAdminTextFields();
        clearBookingTextFields();
        clearSearchPanel();
    }//GEN-LAST:event_adminReturnBtnActionPerformed

    private void bookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookBtnActionPerformed
        // TODO add your handling code here:
        switchPanel(jBookPanel);  
    }//GEN-LAST:event_bookBtnActionPerformed

    private void returnBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBookBtnActionPerformed
        // TODO add your handling code here:
        switchPanel(jSearchPanel);
        clearSearchPanel();
        if(isImported){
            clearAdminTextFields();
            clearBookingTextFields();
            clearPersonalDetails();
            resetTable();
            ImportAndExport.importFile(displayTable);
        }
    }//GEN-LAST:event_returnBookBtnActionPerformed

    private void adminSubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminSubmitBtnActionPerformed
        // adding new rows of data:
        if (isImported){
            String flights = addFlightTF.getText();
            String destination = addDestinationTF.getText();
            String time = addTimeTF.getText();
            String status = addStatusTF.getText();
            String gate = addGateTF.getText();
            String airline = addAirlineTF.getText();
            String price = addPriceTF.getText();
            
            // no empty TF is allowed
            if(flights.isEmpty() || destination.isEmpty() || time.isEmpty() || status.isEmpty() || gate.isEmpty() || airline.isEmpty() || price.isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter data on all fields.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else{
                String[] data = getData();
                int rowCheck = 0;
                int numberOfRows = displayTable.getRowCount();
                boolean isEmpty = false;
                boolean isEditable = true;

                // check for duplicate entries
                do{
                    String flightCheck = (String)displayTable.getValueAt(rowCheck, 0);
                    // column flight determines the uniqueness of a row
                    if(flights.equals(flightCheck)){
                        JOptionPane.showMessageDialog(null, "Duplicate Entry Found.", "ERROR", JOptionPane.ERROR_MESSAGE);
                        isEditable = false;
                        break;
                    }
                    else{
                        rowCheck++;
                    }
                    
                }while(!isEmpty && rowCheck < numberOfRows);

                // additional rows
                if(rowCheck >= numberOfRows){
                    DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
                    model.addRow(data);
                }
                else{
                    if(isEditable){   // cannot allow the duplicate data to override original data
                        for (int i = 0; i < displayTable.getColumnCount(); i++) {
                            displayTable.setValueAt(data[i], rowCheck, i);
                     }
                  }
                }
            }
            clearAdminTextFields();
            ImportAndExport.exportFile(displayTable);
        }
    }//GEN-LAST:event_adminSubmitBtnActionPerformed

    private void displayTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayTableMousePressed
        // TODO add your handling code here:
        JTable table = (JTable) evt.getSource();
        Point point = evt.getPoint();
        int row = table.rowAtPoint(point);
        if(evt.getClickCount() == 2){
            // for admin panel
            addFlightTF.setText((String)(displayTable.getValueAt(row, 0)));
            addDestinationTF.setText((String)(displayTable.getValueAt(row, 1)));
            addTimeTF.setText((String)(displayTable.getValueAt(row, 2)));
            addPriceTF.setText((String)(displayTable.getValueAt(row, 2)));
            addStatusTF.setText((String)(displayTable.getValueAt(row, 3)));
            addGateTF.setText((String)(displayTable.getValueAt(row, 4)));
            addAirlineTF.setText((String)(displayTable.getValueAt(row, 5)));
            addPriceTF.setText((String)(displayTable.getValueAt(row, 6)));

            // for booking panel
            displayFlightTF.setText((String)(displayTable.getValueAt(row, 0)));
            displayDestinationTF.setText((String)(displayTable.getValueAt(row, 1)));
            displayTimeTF.setText((String)(displayTable.getValueAt(row, 2)));
            displayGateTF.setText((String)(displayTable.getValueAt(row, 4)));
            displayAirlineTF.setText((String)(displayTable.getValueAt(row, 5)));
            displayPriceTF.setText((String)(displayTable.getValueAt(row, 6)));
        }
    }//GEN-LAST:event_displayTableMousePressed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        if(isImported){
            // user cannot delete without selecting a row
            try{
                int currentRow = displayTable.getSelectedRow();
                DefaultTableModel model = (DefaultTableModel) displayTable.getModel();

                // completely remove the row
                model.removeRow(currentRow);  

                // updating original file
                ImportAndExport.exportFile(displayTable);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Select a row to delete", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void generateBillBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBillBtnActionPerformed
        // TODO add your handling code here:
        if (isImported){
            String fName = firstNameTF.getText();
            String lName = lastNameTF.getText();
            String checkFlightDetails = displayFlightTF.getText();
            String desti = displayDestinationTF.getText();
            String time = displayTimeTF.getText();
            String airline = displayAirlineTF.getText();
            String gate = displayGateTF.getText();
            String price = displayPriceTF.getText();
            String age = ageTF.getText();

            // cannot leave personal details empty
            if(fName.isEmpty() || lName.isEmpty()){
                JOptionPane.showMessageDialog(null, "Please enter your full name.", "ERROR", JOptionPane.ERROR_MESSAGE);    
            }

            // must select a row of data to generate bill
            else if(checkFlightDetails.isEmpty()){
                JOptionPane.showMessageDialog(null, "Please select your preferred flight from the table.", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            else if(age.isEmpty()){
                JOptionPane.showMessageDialog(null, "Please enter a age", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            else{
                if(maleRBtn.isSelected() == true || femaleRBtn.isSelected() == true || otherRBtn.isSelected() == true){
                    String gender = genderButtonGroup.getSelection().getActionCommand();
                    String flyingClass = flightClassCB.getSelectedItem().toString();

                    JOptionPane.showMessageDialog(null, "Name: " + fName + " " + lName + "\n" + "Age: " 
                            + age + "\n" + "Gender: " + gender + "\n" +"Flight Class: " + flyingClass + "\n" +"Flight ID: " 
                            + checkFlightDetails + "\n" + "From: Nepal to " + desti + "\n" + "Time of flight: " 
                            + time + "\n" + "Gate: " + gate + "\n" + "Airline: " + airline + "\n" + "Price: " + price, "RECEIPT", JOptionPane.PLAIN_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Please select a gender.", "ERROR", JOptionPane.ERROR_MESSAGE);
               }
           }
        }
    }//GEN-LAST:event_generateBillBtnActionPerformed
    
    
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void airlineChoiceCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airlineChoiceCBActionPerformed
        // empty
    }//GEN-LAST:event_airlineChoiceCBActionPerformed
    
    private void clearSearchPanel(){
        priceTF.setText("");
        toTF.setText("");
        airlineChoiceCB.setSelectedIndex(0);
    }
    
    private void resetItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetItemActionPerformed
        // TODO add your handling code here:
        isImported = false;
        flightCount = 0;
        resetTable();
        clearSearchPanel();
        clearBookingTextFields();
        clearAdminTextFields();
        clearPersonalDetails();
    }//GEN-LAST:event_resetItemActionPerformed
    
    private boolean isImported = false;
    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:
        ImportAndExport.importFile(displayTable);
        isImported = true;
    }//GEN-LAST:event_openMenuItemActionPerformed
    
    int flightCount = 0; // counting matched flights
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        if(isImported){
            // all TF must be filled
            if (toTF.getText().equals("") || priceTF.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Please fill all the details.");
            }
            else{
                try{
                    // inserting data from table into arraylist
                    ArrayList<String> al = new ArrayList<>();
                    for(int i = 0; i < displayTable.getRowCount(); i++){
                       for(int j = 0; j < displayTable.getColumnCount(); j++){
                           al.add((String)displayTable.getValueAt(i, j));
                       }
                    }
                    
                    SelectionSort.sort(al);
                    int low = 6;
                    int high = al.size() - 1;
                    int target = Integer.parseInt(priceTF.getText()); // from user
                    int output = BinarySearch.search(al, low, high, target);

                    String tar = String.valueOf(target);
                    int targetIndex = al.indexOf(tar);
                    String flightID = al.get(targetIndex-6);
                    String destination = toTF.getText().toLowerCase();
                    String airline = (String)airlineChoiceCB.getSelectedItem();

                    if (output == -1){
                        JOptionPane.showMessageDialog(null, "No flights of such price is found.");
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"The Flight found for Rs."
                        + target + " is:" + "\n" +  flightID);
                        
                        // 2D arraylist
                        ArrayList<ArrayList<String>> al2 = new ArrayList<>();
                        int cnt = -7;
                        boolean found = false; // if all 3 conditions are not met
                        
                        for (int i = 0; i < (al.size()+1)/7; i++){
                            cnt = cnt + 7;
                            al2.add(new ArrayList<>());
                            // i = row, j = column
                            for (int j = 0; j<7; j++){
                                // store the j+cnt val of ArrayList into ith row and jth column of 2D AL
                                al2.get(i).add(j, al.get(j + cnt));  
                            }
                            
                            // if all of the user's criteria are met: 
                            if (tar.equals(al2.get(i).get(6)) && destination.equals(al2.get(i).get(1).toLowerCase()) && airline.equals(al2.get(i).get(5))){
                                found = true;
                                JOptionPane.showMessageDialog(null, "The flight is: " + al2.get(i).get(0) + "\n" + 
                                "The Airline is: " + airline + "\n"+ "The Price is: " + target);
                                
                                // filtering matched data into the table
                                displayTable.setValueAt(al2.get(i).get(0), flightCount, 0);
                                displayTable.setValueAt(al2.get(i).get(1), flightCount, 1);
                                displayTable.setValueAt(al2.get(i).get(2), flightCount, 2);
                                displayTable.setValueAt(al2.get(i).get(3), flightCount, 3);
                                displayTable.setValueAt(al2.get(i).get(4), flightCount, 4);
                                displayTable.setValueAt(al2.get(i).get(5), flightCount, 5);
                                displayTable.setValueAt(al2.get(i).get(6), flightCount, 6);
                                flightCount++;
                            }
                        }
                        if (found == false){
                            JOptionPane.showMessageDialog(null,"No flight of " + airlineChoiceCB.getSelectedItem() + ",flying to " + toTF.getText() + " with price Rs." + target + " is found.");
                        }
                        else{
                             filter();
                        }
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, "No such price is found.");
                }
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void ageTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ageTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.onlyDigitTextFields(ageTF, evt);
    }//GEN-LAST:event_ageTFKeyPressed
      
    private void firstNameTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.onlyCharTextFields(firstNameTF, evt);
    }//GEN-LAST:event_firstNameTFKeyPressed

    private void lastNameTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.onlyCharTextFields(lastNameTF, evt);
    }//GEN-LAST:event_lastNameTFKeyPressed

    private void addPriceTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addPriceTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.onlyDigitTextFields(addPriceTF, evt);
    }//GEN-LAST:event_addPriceTFKeyPressed

    private void browsingHelpItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsingHelpItemActionPerformed
        // TODO add your handling code here:
        try{
            Desktop.getDesktop().open(new java.io.File("src\\Coursework\\Browsing page.pdf"));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "File not found.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_browsingHelpItemActionPerformed

    private void adminHelpItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminHelpItemActionPerformed
        // TODO add your handling code here:
        try{
            Desktop.getDesktop().open(new java.io.File("src\\Coursework\\Admin Page.pdf"));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "File not found.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_adminHelpItemActionPerformed
    
    private void addFlightTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addFlightTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.bothCharAndDigitTextFields(addFlightTF, evt);
    }//GEN-LAST:event_addFlightTFKeyPressed

    private void addDestinationTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addDestinationTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.onlyCharTextFields(addDestinationTF, evt);
    }//GEN-LAST:event_addDestinationTFKeyPressed

    private void addStatusTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addStatusTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.onlyCharTextFields(addStatusTF, evt);
    }//GEN-LAST:event_addStatusTFKeyPressed

    private void addGateTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addGateTFKeyPressed
        // TODO add your handling code here:
        char cc = evt.getKeyChar();
        String specialCharactersString = "!@#$%&*()'+,./:;<=>?[]^_`{|}";  //allows -
        if(specialCharactersString.contains(Character.toString(cc))){
            addGateTF.setEditable(false);
        }
        else{
            String check = addGateTF.getText();
            if(!check.contains("-")){
                if(cc != evt.VK_SPACE){
                    addGateTF.setEditable(true);
                }
                else{
                    addGateTF.setEditable(false);
                }
            }
            else{
                // only allows one '-'
                if(cc == evt.VK_BACK_SPACE || Character.isDigit(cc)){
                    addGateTF.setEditable(true);
                }
                else{
                    addGateTF.setEditable(false);
                }
            }
        }
    }//GEN-LAST:event_addGateTFKeyPressed

    private void addAirlineTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addAirlineTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.onlyCharTextFields(addAirlineTF, evt);
    }//GEN-LAST:event_addAirlineTFKeyPressed

    private void priceTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.onlyDigitTextFields(priceTF, evt);
    }//GEN-LAST:event_priceTFKeyPressed

    private void toTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_toTFKeyPressed
        // TODO add your handling code here:
        TextFieldRestriction.onlyCharTextFields(toTF, evt);
    }//GEN-LAST:event_toTFKeyPressed

    private void priceTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceTFActionPerformed

    private void addTimeTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addTimeTFKeyPressed
        // TODO add your handling code here:
        char cc = evt.getKeyChar();
        String specialCharactersString = "!@#$%&*()'+,-./;<=>?[]^_`{|}";  //allows :
        if(specialCharactersString.contains(Character.toString(cc))){
            addTimeTF.setEditable(false);
        }
        else{
            String check = addTimeTF.getText();
            if(!check.contains(":")){
                if(cc != evt.VK_SPACE || Character.isDigit(cc)){
                    addTimeTF.setEditable(true);
                }
                else{
                    addTimeTF.setEditable(false);
                }
            }
            else{
                // only allows one ':'
                if(cc == evt.VK_BACK_SPACE || Character.isDigit(cc)){
                    addTimeTF.setEditable(true);
                }
                else{
                    addTimeTF.setEditable(false);
                }
            }
        }
    }//GEN-LAST:event_addTimeTFKeyPressed

    private void bookingHelpItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingHelpItemActionPerformed
        // TODO add your handling code here:
        try{
            Desktop.getDesktop().open(new java.io.File("src\\Coursework\\Booking Page.pdf"));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "File not found.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bookingHelpItemActionPerformed

    private void resetTableItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetTableItemActionPerformed
        // TODO add your handling code here:
        // reset table for fresh search
        if(isImported){
            resetTable();
            ImportAndExport.importFile(displayTable);
            flightCount = 0;
        }
    }//GEN-LAST:event_resetTableItemActionPerformed
    
    private String[] getData(){
        // return an array of user entered data
        String[] data = {addFlightTF.getText(), addDestinationTF.getText(), addTimeTF.getText()
        , addStatusTF.getText(), addGateTF.getText(), addAirlineTF.getText(), addPriceTF.getText()};
        
        return data;
    }
    
    private void switchPanel(JPanel panel){
        // switch panels
        jLayeredPane.removeAll();
        jLayeredPane.add(panel);
        jLayeredPane.repaint();
        jLayeredPane.revalidate();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AirlineInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AirlineInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AirlineInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AirlineInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirlineInfo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addAirlineTF;
    private javax.swing.JTextField addDestinationTF;
    private javax.swing.JTextField addFlightTF;
    private javax.swing.JTextField addGateTF;
    private javax.swing.JTextField addPriceTF;
    private javax.swing.JTextField addStatusTF;
    private javax.swing.JTextField addTimeTF;
    private javax.swing.JMenuItem adminHelpItem;
    private javax.swing.JButton adminModeBtn;
    private javax.swing.JButton adminReturnBtn;
    private javax.swing.JButton adminSubmitBtn;
    private javax.swing.JTextField ageTF;
    private javax.swing.JComboBox<String> airlineChoiceCB;
    private javax.swing.JButton bookBtn;
    private javax.swing.JMenuItem bookingHelpItem;
    private javax.swing.JMenuItem browsingHelpItem;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField displayAirlineTF;
    private javax.swing.JTextField displayDestinationTF;
    private javax.swing.JTextField displayFlightTF;
    private javax.swing.JTextField displayGateTF;
    private javax.swing.JTextField displayPriceTF;
    private javax.swing.JTable displayTable;
    private javax.swing.JTextField displayTimeTF;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JRadioButton femaleRBtn;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTextField firstNameTF;
    private javax.swing.JComboBox<String> flightClassCB;
    private javax.swing.JLabel flightDetailsLbl;
    private javax.swing.JTextField fromTF;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JButton generateBillBtn;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPanel jAdminPanel;
    private javax.swing.JPanel jBookPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jSearchPanel;
    private javax.swing.JTextField lastNameTF;
    private javax.swing.JRadioButton maleRBtn;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JRadioButton otherRBtn;
    private javax.swing.JLabel personalDetailsLbl;
    private javax.swing.JTextField priceTF;
    private javax.swing.JMenuItem resetItem;
    private javax.swing.JMenuItem resetTableItem;
    private javax.swing.JButton returnBookBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel titleLbl;
    private javax.swing.JTextField toTF;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
